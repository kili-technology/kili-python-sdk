name: End-to-end Tests
on:
  workflow_dispatch:
  push:
    branches:
      - "release/**"
      - master
  schedule:
    - cron: "0 7,15 * * *" # 8am and 4pm UTC+1
jobs:
  recipes:
    name: Recipes test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Integration tests
        timeout-minutes: 10
        run: pytest -ra -sv --color yes --code-highlight yes --durations=15 -vv tests/e2e -k ".py"
        env:
          KILI_API_CLOUD_VISION: ${{ secrets.KILI_API_CLOUD_VISION }}
          KILI_API_ENDPOINT: https://staging.cloud.kili-technology.com/api/label/v2/graphql
          KILI_API_KEY: ${{ secrets.KILI_USER_API_KEY }}
          KILI_USER_EMAIL: ${{ secrets.KILI_USER_EMAIL }}
          KILI_USER_ID: ${{ secrets.KILI_USER_ID }}

      - name: Notebook tests
        if: github.event_name != 'push' || github.ref_name != 'master' # doesn't run for push on master
        timeout-minutes: 15
        run: pytest -ra -sv --color yes --code-highlight yes --durations=15 -vv tests/test_notebooks.py
        env:
          KILI_API_CLOUD_VISION: ${{ secrets.KILI_API_CLOUD_VISION }}
          KILI_API_ENDPOINT: https://staging.cloud.kili-technology.com/api/label/v2/graphql
          KILI_API_KEY: ${{ secrets.KILI_USER_API_KEY }}
          KILI_USER_EMAIL: ${{ secrets.KILI_USER_EMAIL }}
          KILI_USER_ID: ${{ secrets.KILI_USER_ID }}

      - name: Slack notification if failure
        if: failure()
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "text": "End-to-end tests result: ${{ job.status }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "End-to-end tests result: ${{ job.status }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_PYTHON_SDK_ALARMING }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
