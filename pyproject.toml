[tool.black]
line-length = 100
preview = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
)/
'''

[tool.isort]
profile = "black"
py_version = 38
known_first_party = ['kili']

[tool.pyright]
exclude = ["**/__pycache__", ".github/scripts/upload_test_stats_datadog.py"]
pythonVersion = "3.8"
typeCheckingMode = "basic"

[tool.ruff]
select = ["ALL"]
line-length = 100
target-version = "py38"
ignore = [
  "ANN101",  # missing type for `self`
  "COM812",  # missing trailing comma
  "E501",    # line too long
  "E731",    # do not assign a lambda expression, use a def
  "EM101",   # use variable instead of string literal in exception
  "EM102",   # avoid using f-string in exception messages
  "FA100",   # Missing `from __future__ import annotations`, but uses `typing`
  "I001",    # isort already takes care of imports
  "PLR0913", # Too many arguments to function call
  "TRY003",  # Avoid specifying long messages outside the exception class
]

[tool.ruff.per-file-ignores]
"**test**" = [
  "ANN001",  # missing type annotation for function argument
  "ANN002",  # missing type annotation for args
  "ANN003",  # missing type annotation for kwargs
  "ANN101",  # missing type annotation for self in method
  "ANN201",  # missing return type annotation
  "ARG001",  # unused function argument
  "ARG002",  # unused method argument
  "D100",    # Missing docstring in public module
  "D101",    # Missing docstring in public class
  "D102",    # Missing docstring in public method
  "D103",    # Missing docstring in public function
  "ERA001",  # found commented out code
  "INP001",  # __init__.py missing
  "N802",    # function name should be lowercase
  "N806",    # variable should be lowercase
  "PGH003",  # use specific rule codes when ignoring type issues
  "PLR2004", # magic value used in comparison
  "S101",    # use of assert detected
  "SLF001",  # private member accessed
  "T201",    # print found
]
[tool.ruff.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
pythonpath = ["src", "."]
